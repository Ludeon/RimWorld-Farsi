name: Translation Workflow
on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version (e.g. v0.3.2)'
        required: true
        default: 'v0.3.1'
      publish_release:
        description: 'Publish release?'
        required: true
        default: 'true'
        type: boolean

env:
  ACTIONS_RUNNER_DEBUG: true

jobs:
  translation_job:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1

      - name: Install dependencies
        run: gem install nokogiri

      - name: Run translation script
        run: |
          if  [ "${{ github.actor }}" = "DanialPahlavan" ]; then
            cd ${{ github.workspace }}
            echo list files :
            ls 
            trans_dir=${{ github.workspace }}/Persian/
            dest_dir=${{ github.workspace }}/Persian/
            cd rimworld-rtl-translation-tools-PersianModded
            ruby -r nokogiri ./reverse_rtl_text.rb "$dest_dir" || { echo ""; exit $ERRCODE; }
            echo "done!"
            echo "Running contextualize_Persian_letters.rb..."
            ruby -r nokogiri ./contextualize_Persian_letters.rb "$dest_dir" || { echo ""; exit $ERRCODE; }
            echo "done!"
            echo "Correction complete."
          fi
        env:
          ERRCODE: 1

      - name: Create ZIP archive
        run: |
          cd ${{ github.workspace }}
          zip -r persian.language.zip ./Persian

      - name: Upload ZIP as workflow artifact
        uses: actions/upload-artifact@v4
        with:
          name: persian.language.zip
          path: ./persian.language.zip

      - name: Create Release
        id: create_release
        if: ${{ github.event.inputs.publish_release == 'true' }}
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.event.inputs.release_version }}
          release_name: Version ${{ github.event.inputs.release_version }}
          body: Release ${{ github.event.inputs.release_version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload ZIP archive to Release
        if: ${{ github.event.inputs.publish_release == 'true' }}
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./persian.language.zip
          asset_name: persian.language.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
